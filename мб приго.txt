	сайт позволит преподавателям удобно и быстро подавать заявки на использование аудиторий. Это значительно упростит процесс планирования и организации учебного процесса;
	платформа обеспечит прозрачность в распределении кабинетов, позволяя преподавателям видеть доступные временные слоты и избегать конфликтов при бронировании;
	система ответов от диспетчера на заявки поможет оперативно решать вопросы, связанные с использованием аудиторий, что повысит эффективность взаимодействия между преподавателями и администрацией колледжа.
Для достижения поставленной цели будут рассмотрены и решены следующие задачи:
	разработан удобный и интуитивно понятный интерфейс сайта;
	размещение на сайте полной и актуальной информации о доступных аудиториях, включая их характеристики, вместимость и оборудование, чтобы преподаватели могли выбрать наиболее подходящее помещение для своих занятий;
	предоставление доступа к расписанию аудиторий, чтобы пользователи могли видеть доступные временные слоты и избегать конфликтов при бронировании;
	создание страницы «Заявки», где преподаватели смогут ознакомиться с процессом подачи заявок и статусом своих запросов, а также получать уведомления о решениях диспетчера;
	создание базы знаний или справочника, где пользователи смогут найти ответы на часто задаваемые вопросы по использованию аудиторий и процедурам бронирования.
Объектом исследования будет образовательное учреждение МГГТК ФГБОУ ВО «АГУ».
Предметом исследования будут являться средства реализации функциональности и контента сайта, а также удобного и интуитивно понятного интерфейса.
Практическая значимость проекта заключается в облегчении доступа преподавателей к информации об занятости кабинетов в колледже, а также возможности оставить заявку на определенный кабинет для проведения занятия, что повышает эффективность работы.
Основными пользователями данной программы будут преподаватели колледжа, сотрудники образовательного учреждения и диспетчер.
Теоретическими основами и методами решения поставленных задач будут методологии проектирования функциональности приложения, структуры базы данных (БД), особенности реализации программного кода с помощью конкретного языка программирования, принципы и алгоритмы применения инструментальных средств на различных этапах разработки программного продукта, а также знания принципов дизайна пользовательского интерфейса.


В современном образовательном процессе эффективное управление ресурсами, такими как учебные аудитории, становится важным аспектом для обеспечения качественного обучения. В колледже, где существует множество дисциплин и преподавателей, необходимость в оптимизации использования учебных кабинетов становится особенно актуальной. Преподаватели часто сталкиваются с проблемой недостатка информации о доступности аудиторий, что может привести к конфликтам и неэффективному использованию ресурсов.
Система управления занятостью аудиторий позволяет решить эту проблему, предоставляя пользователям удобный интерфейс для просмотра расписания, подачи заявок на использование кабинетов и отслеживания статуса этих заявок. Аудитории, как ключевые ресурсы образовательного процесса, должны быть доступны для преподавателей в соответствии с их потребностями и расписанием занятий.
Разрабатываемый сайт "Занятость аудиторий" будет служить платформой для упрощения процесса бронирования кабинетов, обеспечивая прозрачность и эффективность в управлении ими. На сайте будет представлен полный список доступных аудиторий с описанием их характеристик (вместимость, оборудование и т.д.), что позволит преподавателям выбирать наиболее подходящие варианты для своих занятий. 
Кроме того, функционал сайта включает возможность подачи заявок на использование кабинетов, которые будут обрабатываться диспетчером. Это обеспечит централизованный контроль за занятостью аудиторий и позволит избежать дублирования заявок на одно и то же время. Уведомления о статусе заявок помогут преподавателям быть в курсе изменений и планировать свои занятия более эффективно.
Таким образом, разрабатываемый сайт будет не только инструментом для управления ресурсами колледжа, но и важным шагом к повышению качества образовательного процесса путем оптимизации использования учебных помещений.
1.2	Постановка задачи
Необходимо разработать сайт для образовательного учреждения, который будет предоставлять информацию о кабинетах учреждения и подробную информацию о них.
Данная программа должна будет содержать все необходимые сведения об образовательном учреждении МГГТК ФГБОУ ВО «АГУ», иметь удобный и интуитивно понятный пользователю графический интерфейс. 
Программа должна обеспечивать выполнение следующих функций:
	предоставление в главном окне основной информации: расписание пар, а также занятость кабинетов;
	возможность загружать расписание пар;
	возможность преподавателю зайти в свой профиль;
	возможность подачи заявки диспетчеру на бронирование (освобождение) кабинета на определенную пару и дату;
	отображение списка кабинетов с их описанием, включая характеристики (вместимость, наличие мультимедийного оборудования и т.д.);
	возможность отслеживания статуса поданных заявок (ожидает одобрения, одобрена, отклонена) в специальной вкладке «Заявки»;
	функция фильтрации и поиска по аудиториям для удобства выбора подходящего кабинета;
	хранение материалов в БД.

 
Программный продукт должен включать в себя:
	дизайнерскую часть, которая обеспечит удобную работу с сайтом, обеспечит удобный и интуитивно понятный интерфейс для навигации по сайту;
	функциональную часть, в которой будет реализован весь функционал, описанный выше;
	веб-приложение для управления данными ювелирного магазина, позволяющее добавлять, изменять и удалять информацию о товарах, управлять заказами и просматривать аналитику.
	тестовую часть, в которой будет производиться тестирование и отладка сайта для обеспечения его стабильной работы и высокой производительности.
Требования по входным данным:
	Запросы пользователей —  отправка заявки на бронирование кабинета.
	???????
Требования по выходным данным:
	Информация о кабинетах – возможность просматривать расписание пар и отсл
	?????
Запросы должны обрабатываться через API и передаваться внешним приложениям в формате JSON. 
Хранение и передача данных должны осуществляться в безопасной и защищенной форме. Доступ к данным для администраторов должен быть строго контролируемым с использованием аутентификации. Информация администраторов должна храниться в зашифрованном виде, и необходимо принять меры для обеспечения их конфиденциальности, чтобы предотвратить несанкционированный доступ к правам администратора.
